// Script s·ª≠a th√≥i quen m·∫∑c ƒë·ªãnh
import fs from "fs/promises"
import { fileURLToPath } from "url"
import { dirname, join } from "path"

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)
const habitsFile = join(__dirname, "habits.json")
const progressFile = join(__dirname, "progress.json")

// H√†m ƒë·ªçc d·ªØ li·ªáu t·ª´ file
async function readData(filePath) {
  try {
    const data = await fs.readFile(filePath, "utf8")
    return JSON.parse(data)
  } catch (error) {
    if (error.code === "ENOENT") {
      return []
    }
    throw error
  }
}

// H√†m ghi d·ªØ li·ªáu v√†o file
async function writeData(filePath, data) {
  await fs.writeFile(filePath, JSON.stringify(data, null, 2), "utf8")
}

async function fixDefaultHabits() {
  try {
    console.log("üîß S·ª¨A TH√ìI QUEN M·∫∂C ƒê·ªäNH")
    console.log("=" * 50)

    const habits = await readData(habitsFile)
    const progress = await readData(progressFile)

    console.log(`üìä Tr∆∞·ªõc khi s·ª≠a: ${habits.length} th√≥i quen, ${progress.length} ti·∫øn ƒë·ªô`)

    // Danh s√°ch ID th√≥i quen m·∫∑c ƒë·ªãnh
    const defaultHabitIds = [
      "default_water_habit",
      "default_exercise_habit",
      "default_meditation_habit",
      "default_reading_habit",
    ]

    // X√≥a t·∫•t c·∫£ th√≥i quen m·∫∑c ƒë·ªãnh c≈© (c·∫£ ID c·ªë ƒë·ªãnh v√† ID ƒë·ªông)
    const userHabits = habits.filter((habit) => {
      // Gi·ªØ l·∫°i th√≥i quen do ng∆∞·ªùi d√πng t·∫°o (kh√¥ng ph·∫£i m·∫∑c ƒë·ªãnh)
      const isDefaultById = defaultHabitIds.includes(habit.id)
      const isDefaultByName = ["U·ªëng n∆∞·ªõc", "T·∫≠p th·ªÉ d·ª•c", "Thi·ªÅn", "ƒê·ªçc s√°ch"].includes(habit.name)

      if (isDefaultById || isDefaultByName) {
        console.log(`üóëÔ∏è X√≥a th√≥i quen m·∫∑c ƒë·ªãnh: ${habit.name} (${habit.id})`)
        return false
      }
      return true
    })

    // T·∫°o th√≥i quen m·∫∑c ƒë·ªãnh m·ªõi v·ªõi ID c·ªë ƒë·ªãnh
    const now = new Date().toISOString()
    const defaultHabits = [
      {
        id: "default_water_habit",
        name: "U·ªëng n∆∞·ªõc",
        category: "health",
        iconIndex: 0,
        target: 8,
        unit: "Ly",
        frequency: "H·∫±ng ng√†y",
        reminders: "8:00, 12:00, 16:00, 20:00",
        color: "blue",
        createdAt: now,
        updatedAt: now,
      },
      {
        id: "default_exercise_habit",
        name: "T·∫≠p th·ªÉ d·ª•c",
        category: "health",
        iconIndex: 4,
        target: 30,
        unit: "Ph√∫t",
        frequency: "H·∫±ng ng√†y",
        reminders: "6:00",
        color: "blue",
        createdAt: now,
        updatedAt: now,
      },
      {
        id: "default_meditation_habit",
        name: "Thi·ªÅn",
        category: "mental",
        iconIndex: 1,
        target: 15,
        unit: "Ph√∫t",
        frequency: "H·∫±ng ng√†y",
        reminders: "7:00, 21:00",
        color: "orange",
        createdAt: now,
        updatedAt: now,
      },
      {
        id: "default_reading_habit",
        name: "ƒê·ªçc s√°ch",
        category: "mental",
        iconIndex: 3,
        target: 30,
        unit: "Ph√∫t",
        frequency: "H·∫±ng ng√†y",
        reminders: "21:00",
        color: "orange",
        createdAt: now,
        updatedAt: now,
      },
    ]

    // K·∫øt h·ª£p th√≥i quen do ng∆∞·ªùi d√πng t·∫°o v√† th√≥i quen m·∫∑c ƒë·ªãnh m·ªõi
    const allHabits = [...userHabits, ...defaultHabits]

    // L·ªçc ti·∫øn ƒë·ªô ch·ªâ gi·ªØ l·∫°i c·ªßa th√≥i quen c√≤n t·ªìn t·∫°i
    const validHabitIds = new Set(allHabits.map((h) => h.id))
    const validProgress = progress.filter((p) => {
      if (validHabitIds.has(p.habitId)) {
        return true
      } else {
        console.log(`üóëÔ∏è X√≥a ti·∫øn ƒë·ªô c·ªßa th√≥i quen kh√¥ng t·ªìn t·∫°i: ${p.habitId}`)
        return false
      }
    })

    // L∆∞u d·ªØ li·ªáu
    await writeData(habitsFile, allHabits)
    await writeData(progressFile, validProgress)

    console.log(`\nüìä Sau khi s·ª≠a:`)
    console.log(`   - Th√≥i quen do ng∆∞·ªùi d√πng: ${userHabits.length}`)
    console.log(`   - Th√≥i quen m·∫∑c ƒë·ªãnh: ${defaultHabits.length}`)
    console.log(`   - T·ªïng th√≥i quen: ${allHabits.length}`)
    console.log(`   - Ti·∫øn ƒë·ªô h·ª£p l·ªá: ${validProgress.length}`)

    console.log(`\n‚úÖ ƒê√£ s·ª≠a th√≥i quen m·∫∑c ƒë·ªãnh th√†nh c√¥ng!`)

    // Hi·ªÉn th·ªã th√≥i quen m·∫∑c ƒë·ªãnh m·ªõi
    console.log(`\nüîµ Th√≥i quen m·∫∑c ƒë·ªãnh m·ªõi:`)
    defaultHabits.forEach((habit, index) => {
      console.log(`   ${index + 1}. ${habit.name} (${habit.id})`)
    })
  } catch (error) {
    console.error("‚ùå L·ªói khi s·ª≠a th√≥i quen m·∫∑c ƒë·ªãnh:", error)
  }
}

// Ch·∫°y script
fixDefaultHabits()
